---
layout: post
title: 프로젝트 시작하기 전에 생각해볼만한 것들
image: 
date: 2023-06-26 12:14:20 +0200
tags: [knowledge]
categories: knowledge
---

# 프로젝트 시작하기
프로젝트를 시작할 떄 생각해볼만한 것들을 적어놓았다.
- [프로젝트 시작하기](#프로젝트-시작하기)
  - [1. 기술 스택 정하기](#1-기술-스택-정하기)
  - [2. 코드 스타일 관련 컨벤션 정하기](#2-코드-스타일-관련-컨벤션-정하기)
  - [3. Git Branching 전략과 commit 컨벤션을 정하기](#3-git-branching-전략과-commit-컨벤션을-정하기)
  - [4. 보이스카웃 룰 준수](#4-보이스카웃-룰-준수)
  - [5. 프로젝트 관리 방법론](#5-프로젝트-관리-방법론)
  - [6. 프로젝트 시작 전 분석](#6-프로젝트-시작-전-분석)

## 1. 기술 스택 정하기
___
협업에서 기술스택을 정할 때 다음과 같은 요소들을 검토해보자.
- 성숙도: 기술이 충분히 성숙하여 문제상황을 해결 가능한가?
- 익숙함: 구성원이 해당 기술에 익숙하여 높은 생산성을 가지는가?
- 안전성: 기술이 지속적으로 개선되며 관리가 되어지는가?
(참고: https://velog.io/@kshired/%ED%98%91%EC%97%85%EC%97%90%EC%84%9C-%EA%B8%B0%EC%88%A0%EC%8A%A4%ED%83%9D-%EC%A0%95%ED%95%98%EA%B8%B0)

## 2. 코드 스타일 관련 컨벤션 정하기
___
협업을 할 때 코드 컨벤션을 통일해주는 것이 중요하다. 가장 간단한 방법은 사용하는 ide에 코드 컨벤션을 적용해주는 tool을 사용하며, 설정을 동일시 하는 것이다.

## 3. Git Branching 전략과 commit 컨벤션을 정하기
___
모든 프로젝트에 적합한 branching 전략은 없다. 단지 각 프로젝트 성향에 맞는 braching 전략이 존재할 뿐이다. 대표적으로 사용되는 git branching 전략은 다음과 같다.
- Git Flow 전략: 많은 팀에서 기본적으로 적용하는 전략. main, develop, feature, release, hotfix 브랜치로 분리하는 것이 특징. 소규모 팀보다는 규모가 있는팀에 어울리는 전략이다.
- GIthub Flow: Git Flow에서 develop, release, hotfix 브랜치를 제거한 형태다. Release를 위한 과정이 굉장히 줄어들기 때문에 잦은 기능 수정과 배포가 있는 애자일 조직에 적합한 전략이다.
(참고: https://sungjk.github.io/2023/02/20/branch-strategy.html)

## 4. 보이스카웃 룰 준수
___
보이스카우트가 오기 전보다 돌아갈 때 그 자리를 더 깨끗하게 한다는 규칙. 체크아웃 할때 보다 아름답게(깨끗하게)한다는 규칙을 의미한다. 소스코드에 적용하자면, 새로 추가하려는 기능이 결함이 존재하는지, 깨끗한지 점검하고 추가하는 태도를 의미합니다.

## 5. 프로젝트 관리 방법론
___
프로젝트 관리 방법론은 프로젝트를 체계적으로 관리하는 사람들이 사용하는 원칙과 기법, 절차입니다. 효과적인 프로젝트를 운용하기 위한 가이드 혹은 템플릿이라고 할 수 있습니다. 대표적인 프로젝트 관리 방법론은 다음과 같습니다.
1. 애자일: 가장 많이 언급되는 프로젝트 관리 방법론인 애자일은 유연성과 빠른 속도가 요구되는 프로젝트를 관리하기 위해 개발되었습니다.
2. 워터폴: 오랜 기간 프로젝트 관리 방법론에서 주류였습니다. 과거부터 다양한 사업에서 활용되었으며, 요구사항 분석, 디자인, 시험, 이행, 유지보수 순서로 실행되는 관리 방법론입니다.

## 6. 프로젝트 시작 전 분석
___
프로젝트를 시작하기 전에 해당 프로젝트가 정말 의미가 있는 지, 혹시 비슷한 서비스가 이미 존재하지 않는지, 참고할만한 사이트가 3개 이상 있는지, 등 다양한 방면으로 미리 조사를 해야됩니다.